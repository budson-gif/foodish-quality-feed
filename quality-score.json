{
  "updatedAt": "2025-10-25T09:51:31.629Z",
  "source": "ci",
  "score": 78,
  "lintPoints": 20,
  "typecheckPoints": 20,
  "testPoints": 18,
  "coveragePoints": 0,
  "domainPoints": 20,
  "lint": {
    "errors": 0,
    "warnings": 0,
    "items": []
  },
  "typecheck": {
    "errors": 0,
    "items": []
  },
  "tests": {
    "total": 197,
    "passed": 176,
    "failed": 21,
    "failures": [
      {
        "name": "Domain Rules (T1-T4) T1: price_net <= 0 blockt Save",
        "file": "src/test/domain-rules.test.ts",
        "message": "AssertionError: expected [Function] to throw error matching /größer als 0.01/ but got '[\\n  {\\n    \"code\": \"custom\",\\n    \"m…'\n    at Proxy.<anonymous> (file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/expect/dist/index.js:1420:16)\n    at Proxy.<anonymous> (file:///home/ru"
      },
      {
        "name": "Ingredient Price Editor 1. Reset bei Neuer Zutat: Öffne Dialog mit ingredient=null → name leer, supplierPrices leer",
        "file": "src/test/ingredient.prices.spec.tsx",
        "message": "TestingLibraryElementError: Unable to find a label with the text of: /Name/i\n\nIgnored nodes: comments, script, style\n\u001b[36m<body\u001b[39m\n  \u001b[33mdata-scroll-locked\u001b[39m=\u001b[32m\"1\"\u001b[39m\n  \u001b[33mstyle\u001b[39m=\u001b[32m\"pointer-events: none;\"\u001b[39m\n\u001b[36m>\u001b[39m\n  \u001b[36m<span\u001b[39m\n    \u001b[33maria-hidden\u001b[39m=\u001b[32m\"true\"\u001b[3"
      },
      {
        "name": "Ingredient Price Editor 3. Preis-Snapshot: Draft wird gemerged, handleSaveAndKeepOpen() fügt Preis in State",
        "file": "src/test/ingredient.prices.spec.tsx",
        "message": "TestingLibraryElementError: Unable to find an element with the text: /Lieferant hinzufügen/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b"
      },
      {
        "name": "Ingredient Price Editor 4. Duplikat-Guard: Gleiches Supplier+Pack wird blockiert",
        "file": "src/test/ingredient.prices.spec.tsx",
        "message": "TestingLibraryElementError: Unable to find an element with the text: 10.50 EUR. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b[36m<body\u001b[39m"
      },
      {
        "name": "Ingredient Price Editor 5. Max-5-Limit: 6. Preis wird verhindert, Toast erscheint",
        "file": "src/test/ingredient.prices.spec.tsx",
        "message": "TestingLibraryElementError: Unable to find an element with the text: /Lieferant hinzufügen/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n\u001b"
      },
      {
        "name": "priceMath - AC7: Parity (perBase == perSmall * smallFactor) maintains parity within ±0.00001 for mass units",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected null not to be null\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:102:28\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner/work/foo"
      },
      {
        "name": "priceMath - AC7: Parity (perBase == perSmall * smallFactor) maintains parity within ±0.00001 for volume units",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected null not to be null\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:124:28\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner/work/foo"
      },
      {
        "name": "priceMath - AC7: Parity (perBase == perSmall * smallFactor) handles piece units (no small unit)",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected null not to be null\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:146:28\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner/work/foo"
      },
      {
        "name": "priceMath - Formatters (2/4/5 decimals) formats VPE with 2 decimals",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected '17,46 €' to match /17,46 €/\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:154:31\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner"
      },
      {
        "name": "priceMath - Formatters (2/4/5 decimals) formats VE with 2 decimals",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected '3,26 €' to match /3,26 €/\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:159:29\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner/w"
      },
      {
        "name": "priceMath - Formatters (2/4/5 decimals) formats perBase with 4 decimals",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected '17,4500 € / kg' to match /17,4500 € \\/ kg/ kg\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:164:37\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at f"
      },
      {
        "name": "priceMath - Formatters (2/4/5 decimals) formats perSmall with 5 decimals",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected '0,01745 € / g' to match /0,01745 € \\/ g/ g\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:170:39\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file"
      },
      {
        "name": "priceMath - Real-World Cases (Butter, Apfelsaft, Lauch) calculates Lauch gekocht price correctly (0,03 € / 1 kg)",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected null to be close to 0.03, received difference is 0.03, but expected 0.005\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:240:24\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chu"
      },
      {
        "name": "priceMath - DisplaySet Integration computes complete display set with dual display",
        "file": "src/lib/__tests__/priceMath.dual.test.ts",
        "message": "AssertionError: expected '17,45 €' to match /17,45 €/\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.dual.test.ts:271:25\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runner"
      },
      {
        "name": "deriveForSave - Density Gate should return null perBase/perSmall for ml→g WITHOUT density",
        "file": "src/lib/__tests__/priceMath.save.density.test.ts",
        "message": "AssertionError: expected null to be +0 // Object.is equality\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.save.density.test.ts:28:39\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:"
      },
      {
        "name": "deriveForSave - Density Gate should calculate correctly for ml→g WITH density",
        "file": "src/lib/__tests__/priceMath.save.density.test.ts",
        "message": "AssertionError: expected null to be close to 0.02954, received difference is 0.02954, but expected 0.000049999999999999996\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.save.density.test.ts:47:41\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_"
      },
      {
        "name": "deriveForSave Both: Beide explizit vorhanden",
        "file": "src/lib/__tests__/priceMath.save.test.ts",
        "message": "AssertionError: expected 'VPE' to be 'Both' // Object.is equality\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.save.test.ts:56:27\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///"
      },
      {
        "name": "priceMath getDisplayPrices returns correct label and raw value",
        "file": "src/lib/__tests__/priceMath.test.ts",
        "message": "AssertionError: expected '0,0175 € / g' to contain '0,01745'\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/__tests__/priceMath.test.ts:140:35\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/runn"
      },
      {
        "name": "Yield calculations - Edge Cases handles complex rounding scenario",
        "file": "src/lib/domain/__tests__/yield.edge.test.ts",
        "message": "AssertionError: expected 0.108222 to be close to 0.108227, received difference is 0.0000050000000000050004, but expected 0.0000049999999999999996\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/lib/domain/__tests__/yield.edge.test.ts:112:20\n    at file:///home/runner/work/foodishkitchen/f"
      },
      {
        "name": "Facet Counts with Self-Exclusion should apply self-exclusion (counts change when filter active)",
        "file": "src/components/recipes/table-v2/__tests__/facets.test.ts",
        "message": "AssertionError: expected undefined to be +0 // Object.is equality\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/components/recipes/table-v2/__tests__/facets.test.ts:82:81\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11"
      },
      {
        "name": "Facet Counts with Self-Exclusion should disable options with count=0",
        "file": "src/components/recipes/table-v2/__tests__/facets.test.ts",
        "message": "AssertionError: expected undefined to be +0 // Object.is equality\n    at /home/runner/work/foodishkitchen/foodishkitchen/src/components/recipes/table-v2/__tests__/facets.test.ts:91:64\n    at file:///home/runner/work/foodishkitchen/foodishkitchen/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11"
      }
    ]
  },
  "coverage": {
    "lines": 0,
    "branches": 0,
    "functions": 0,
    "statements": 0
  },
  "domain": {
    "total": 0,
    "invalidPrices": 0,
    "orphaned": 0,
    "deletedRefs": 0,
    "missingDensities": 0,
    "details": {}
  }
}